/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Bean.DatabaseConnection;
import Bean.PODetailBean;
import Bean.PRDetailBean;
import Bean.PurchaseRequestBean;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author HP PC
 */
public class FinalizePR extends javax.swing.JFrame {

    /**
     * Creates new form FinalizePR
     */
    public FinalizePR() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/icon.png")));
        DBtoTable();
//        findby.addItemListener((ItemEvent e) -> {
//            if (findby.getSelectedIndex() == 0) {
//                findfield.getDocument().removeDocumentListener(this.findfield.);
        findfield.getDocument().addDocumentListener(new findlistenerByDept());
//            } else if (findby.getSelectedIndex() == 1) {
//                findfield.getDocument().addDocumentListener(new findlistenerByDate());
//            } else if (findby.getSelectedIndex() == 2) {
//                findfield.getDocument().addDocumentListener(new findlistenerByNum());
//            }
//        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        pr_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        findfield = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        findby = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pr_number = new javax.swing.JTextField();
        dept_req = new javax.swing.JTextField();
        req_itemQTY = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        req_date = new javax.swing.JTextField();
        Save = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Final = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo.png"))); // NOI18N

        pr_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        pr_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pr_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(pr_table);

        jScrollPane2.setViewportView(jScrollPane1);

        jLabel1.setText("FORM");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Purchase Request Final Approval");

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel3.setText("select the PR data below");

        jLabel4.setText("Find");

        findby.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "by Department", "by PR Number", "by PR Date" }));

        jLabel5.setText("PR Number");

        jLabel6.setText("Department Request");

        jLabel7.setText("Requested Item amount");

        pr_number.setEnabled(false);

        dept_req.setEnabled(false);

        req_itemQTY.setEnabled(false);

        jLabel8.setText("Request Date");

        req_date.setEnabled(false);

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel9.setText("only authorized user can give Final Approval");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel10.setText("please do it with caution");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 51)));

        Final.setText("FINAL?");
        Final.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Final)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Final)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(logo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6))
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(findfield, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(findby, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(dept_req)
                            .addComponent(req_itemQTY, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(req_date, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9)))
                            .addComponent(pr_number))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(301, 301, 301))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logo)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(findby, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(pr_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dept_req, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(req_itemQTY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(req_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(Save)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pr_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pr_tableMouseClicked
        int row = pr_table.getSelectedRow();
        String prnum = pr_table.getValueAt(row, 0).toString();
        PRDetailBean prd = new PRDetailBean();
        PurchaseRequestBean pr = new PurchaseRequestBean();
        PurchaseRequestBean temp = pr.cariPR(prnum);
        pr_number.setText(temp.getPr_number());
        dept_req.setText(temp.getDept_id());
        req_itemQTY.setText(String.valueOf(prd.PRDetailCount(pr_number.getText())));
        Final.setEnabled(true);
//        req_date.setText(temp.getReq_date().toString());
    }//GEN-LAST:event_pr_tableMouseClicked

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        PurchaseRequestBean pb = new PurchaseRequestBean();
        if (Final.isSelected()) {
            if (pb.setFinalTrue(pr_number.getText())) {
                PODetailBean pod = new PODetailBean();
                if (pod.moveToPO(pr_number.getText())) {
                    JOptionPane.showMessageDialog(null, "PR Finalization succeeded!");
                    DBtoTable();
                    pr_number.setText(null);
                    dept_req.setText(null);
                    req_itemQTY.setText(null);
                    Final.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(null, "PR Finalization Failed! Please try again!");
                    pr_number.setText(null);
                    dept_req.setText(null);
                    req_itemQTY.setText(null);
                    Final.setEnabled(false);
                }
            }
        }
    }//GEN-LAST:event_SaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FinalizePR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FinalizePR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FinalizePR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FinalizePR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FinalizePR().setVisible(true);
            }
        });
    }

    private void DBtoTable() {
        DatabaseConnection db = new DatabaseConnection();
        try {

            String query = "SELECT pr_number as PRNo, department_id as Department, request_date as Date  FROM hcdy_purchasereq where isEmpty=0 and isFinal=0";
            PreparedStatement pst = db.getConnection().prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            pr_table.setModel(DbUtils.resultSetToTableModel(rs));
            db.getConnection().close();
        } catch (SQLException ex) {
            Logger.getLogger(TableUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void findTablebyDept() {
        DatabaseConnection db = new DatabaseConnection();
        try {
            String query = "SELECT pr_number as PRNo, department_id as Department, request_date as Date  FROM hcdy_purchasereq where isEmpty=0 and isFinal=1 and department_id='" + findfield.getText() + "'";
            PreparedStatement pst = db.getConnection().prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            pr_table.setModel(DbUtils.resultSetToTableModel(rs));
            db.getConnection().close();
        } catch (SQLException ex) {
            Logger.getLogger(TableCategory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void findTablebyDate() {
        DatabaseConnection db = new DatabaseConnection();
        try {
            String query = "SELECT pr_number as PRNo, department_id as Department, request_date as Date  FROM hcdy_purchasereq where isEmpty=0 and isFinal=1 and request_date ='" + findfield.getText() + "'";
            PreparedStatement pst = db.getConnection().prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            pr_table.setModel(DbUtils.resultSetToTableModel(rs));
            db.getConnection().close();
        } catch (SQLException ex) {
            Logger.getLogger(TableCategory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void findTablebyPRNum() {
        DatabaseConnection db = new DatabaseConnection();
        try {
            String query = "SELECT pr_number as PRNo, department_id as Department, request_date as Date  FROM hcdy_purchasereq where isEmpty=0 and PR_number=" + findfield.getText() + "'";
            PreparedStatement pst = db.getConnection().prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            pr_table.setModel(DbUtils.resultSetToTableModel(rs));
            db.getConnection().close();
        } catch (SQLException ex) {
            Logger.getLogger(TableCategory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public class findlistenerByDate implements DocumentListener {

        @Override
        public void insertUpdate(DocumentEvent e) {
            findTablebyDate();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            findTablebyDate();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            findTablebyDate();
        }

    }

    public class findlistenerByDept implements DocumentListener {

        @Override
        public void insertUpdate(DocumentEvent e) {
            findTablebyDept();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            findTablebyDept();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            findTablebyDept();
        }

    }

    public class findlistenerByNum implements DocumentListener {

        @Override
        public void insertUpdate(DocumentEvent e) {
            findTablebyPRNum();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            findTablebyPRNum();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            findTablebyPRNum();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Final;
    private javax.swing.JButton Save;
    private javax.swing.JTextField dept_req;
    public javax.swing.JComboBox findby;
    private javax.swing.JTextField findfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel logo;
    private javax.swing.JTextField pr_number;
    private javax.swing.JTable pr_table;
    private javax.swing.JTextField req_date;
    private javax.swing.JTextField req_itemQTY;
    // End of variables declaration//GEN-END:variables
}
